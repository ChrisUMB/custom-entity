import javax.net.ssl.HttpsURLConnection
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption

final String SERVER_MEMORY = "4G"
final String VERSION = "1.17.1"
final String SERVER_DOWNLOAD = "https://papermc.io/api/v2/projects/paper/versions/1.17.1/builds/325/downloads/paper-1.17.1-325.jar"
final String GROUP_NAME = "server [${VERSION}]"
final File RUN_FOLDER = new File(project.rootDir, "run-${VERSION}")

task copyToPlugins(type: Copy) {
    group GROUP_NAME
    from testShadowJar
    into new File(RUN_FOLDER, "plugins")
}

task setupTestServer(type: Exec) {
    group GROUP_NAME

    doFirst {
        def serverDir = RUN_FOLDER
        serverDir.mkdir()

        def settingsDir = new File(serverDir, "settings")
        settingsDir.mkdir()

        def eula = new File(settingsDir, "eula.txt")
        try(def writer = new FileWriter(eula)) {
            writer.write("eula=true")
        }

        new File(serverDir, "plugins").mkdir()
        new File(serverDir, "worlds").mkdir()
        createServerJar(SERVER_DOWNLOAD, serverDir)
    }

    workingDir new File(RUN_FOLDER, "settings")
    standardOutput = new ByteArrayOutputStream()
    commandLine 'java', '-jar', '../server.jar', '--help'
}


task runTestServer(type: Exec, dependsOn: [copyToPlugins]) {
    group GROUP_NAME
    workingDir new File(RUN_FOLDER, "settings")
    commandLine 'java',
            '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005',
            "-Xmx${SERVER_MEMORY}",
            "-Xms${SERVER_MEMORY}",
            '-XX:+UseG1GC',
            '-XX:+ParallelRefProcEnabled',
            '-XX:MaxGCPauseMillis=200',
            '-XX:+UnlockExperimentalVMOptions',
            '-XX:+DisableExplicitGC',
            '-XX:+AlwaysPreTouch',
            '-XX:G1NewSizePercent=30',
            '-XX:G1MaxNewSizePercent=40',
            '-XX:G1HeapRegionSize=8M',
            '-XX:G1ReservePercent=20',
            '-XX:G1HeapWastePercent=5',
            '-XX:G1MixedGCCountTarget=4',
            '-XX:InitiatingHeapOccupancyPercent=15',
            '-XX:G1MixedGCLiveThresholdPercent=90',
            '-XX:G1RSetUpdatingPauseTimePercent=5',
            '-XX:SurvivorRatio=32',
            '-XX:+UseCompressedOops',
            '-XX:+PerfDisableSharedMem',
            '-XX:MaxTenuringThreshold=1',
            '-Dusing.aikars.flags=https://mcflags.emc.gs',
            '-Daikars.new.flags=true',
            '-jar', '../server.jar',
            '-P', '../plugins',
            '-W', '../worlds',
            '-nogui'
    standardInput = System.in
}


static void createServerJar(String serverDownloadURL, File serverDir) {
    def url = new URL(serverDownloadURL)
    def connection = url.openConnection() as HttpsURLConnection
    connection.requestMethod = "GET"
    connection.doInput = true
    connection.setRequestProperty("User-Agent", "SpigotGradle/1.0")

    def serverFile = new File(serverDir, 'server.jar')
    Files.copy(connection.inputStream,
            Paths.get(serverFile.absolutePath),
            StandardCopyOption.REPLACE_EXISTING,
    )

    connection.disconnect()
}

dependencies {
    implementation fileTree("run-${VERSION}/settings/cache/patched_${VERSION}.jar")
}